---
Checks: >
  *,
  -*-deprecated-headers,
  -*-uppercase-literal-suffix,
  -altera-*,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -fuchsia-*,
  -google-build-using-namespace,
  -hicpp-special-member-functions,
  -llvmlibc-*,
  -misc-non-private-member-variables-in-classes,
  -misc-unused-parameters,
  -modernize-use-nodiscard,
  -modernize-use-trailing-return-type,
  -readability-convert-member-functions-to-static,
  -readability-isolate-declaration,
  -readability-magic-numbers,

WarningsAsErrors: -*
FormatStyle: file

CheckOptions:
  - { key: readability-identifier-naming.ClassCase,             value: CamelCase  }
  - { key: readability-identifier-naming.ClassConstantCase,     value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumCase,              value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantCase,      value: UPPER_CASE }
  - { key: readability-identifier-naming.FunctionCase,          value: CamelCase  }
  - { key: readability-identifier-naming.GlobalConstantCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.MacroDefinitionCase,   value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberCase,            value: lower_case }
  - { key: readability-identifier-naming.MethodCase,            value: CamelCase  }
  - { key: readability-identifier-naming.NamespaceCase,         value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,         value: lower_case }
  - { key: readability-identifier-naming.StructCase,            value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,          value: lower_case }
  - { key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor, value: 1 }
...
